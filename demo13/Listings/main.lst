C51 COMPILER V9.60.0.0   MAIN                                                              01/23/2025 02:17:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <stdio.h>
   3          
   4          sbit ds_pin = P0 ^ 3;
   5          sbit stcp_pin = P0 ^ 4;
   6          sbit shcp_pin = P0 ^ 5;
   7          
   8          void delay_ms(unsigned int xms)   //@12MHz
   9          {
  10   1          unsigned int i, j;
  11   1          for (i = xms; i > 0; i--) {
  12   2              for (j = 124; j > 0; j--) {}
  13   2          }
  14   1      }
  15          
  16          //共阴 数码管数组：0-9
  17          unsigned char num[] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
  18          
  19          void hc595_send_byte(unsigned char byte) {
  20   1          unsigned int i;
  21   1          for (i = 0; i < 8; ++i) {
  22   2              // 串行输入引脚，即数据在一根信号线上按顺序一位位地传输
  23   2              if (byte & 0x80)
  24   2                  ds_pin = 1;
  25   2              else
  26   2                  ds_pin = 0;
  27   2              // SHCP发生一次上升沿，芯片从DS引脚上获取当前数据
  28   2              shcp_pin = 0;
  29   2              shcp_pin = 1;
  30   2              byte <<= 1;
  31   2          }
  32   1      }
  33          
  34          // num-需要显示的内容 addr-在哪个数码管显示
  35          void hc595_send_data(unsigned char num, unsigned char addr) {
  36   1          // 先发需要显示的数字
  37   1          hc595_send_byte(num);
  38   1          // 将移位寄存器填满后，再往移位寄存器中塞数据，数据会被从9脚输出
  39   1          // 再发需要点亮的数码管，这时候移位寄存器中的数据被移位到芯片2中
  40   1          if (addr == 0)
  41   1              // Q0控制 0b1111 1110 0xFE
  42   1              hc595_send_byte(0xFE);
  43   1          else if (addr == 1)
  44   1              // Q1控制 0b1111 1101 0xFD
  45   1              hc595_send_byte(0xFD);
  46   1          // 移位寄存器的8位数据全传输完毕后，制造一次锁存寄存器引脚的上升沿
  47   1          stcp_pin = 0;
  48   1          stcp_pin = 1;
  49   1      }
  50          
  51          void uart_init(void)                //9600bps@11.0592MHz
  52          {
  53   1          PCON &= 0x7F;                //波特率不倍速
  54   1          SCON = 0x50;                //8位数据,可变波特率
C51 COMPILER V9.60.0.0   MAIN                                                              01/23/2025 02:17:00 PAGE 2   

  55   1          TMOD &= 0x0F;                //清除定时器1模式位
  56   1          TMOD |= 0x20;                //设定定时器1为8位自动重装方式
  57   1          TL1 = 0xFD;                //设定定时初值
  58   1          TH1 = 0xFD;                //设定定时器重装值
  59   1          ET1 = 0;                //禁止定时器1中断
  60   1          TR1 = 1;                //启动定时器1
  61   1      }
  62          
  63          /*
  64          **重写printf调用的putchar函数，重定向到串口输出
  65          **需要引入头文件<stdio.h>
  66          *****/
  67          char putchar(char dat) {
  68   1          //输出重定向到串口
  69   1          SBUF = dat;     //写入发送缓冲寄存器
  70   1          while (!TI);    //等待发送完成，TI发送溢出标志位 置1
  71   1          TI = 0;      //对溢出标志位清零
  72   1          return dat;  //返回给函数的调用者printf
  73   1      }
  74          
  75          void main() {
  76   1          uart_init();
  77   1          while (1) {
  78   2              int i,j;
  79   2              //// 在第一个数码管显示数字0
  80   2              hc595_send_data(num[0], 0);
  81   2              //// 在第二个数码管显示数字3
  82   2              hc595_send_data(num[0], 1);
  83   2              for (i = 0; i < 61; ++i) {
  84   3                  int ge = i % 10;
  85   3                  int bai = i / 10;
  86   3                  printf("ge = %d, bai = %d \r\n", ge, bai);
  87   3                  for (j = 0; j < 100; ++j) { // 保证百位和个位都有足够的显示时间
  88   4                      // 显示百位
  89   4                      hc595_send_data(num[bai], 0);
  90   4                      delay_ms(5);
  91   4      
  92   4                      // 显示个位
  93   4                      hc595_send_data(num[ge], 1);
  94   4                      delay_ms(5);
  95   4                  }
  96   3              }
  97   2              delay_ms(5000);
  98   2          }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
